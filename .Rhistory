(1-exp(-10))*(1-exp(-100))
(1-exp(-5))*(1-exp(-20))
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
3944*0.15
1^2*0.5+2^2*0.31+3^2*0.19
0^2*0.12+1^2*0.63+2^2*0.25
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
6^3
combn(90,10)
choose(90,10)
choose(90,10)
format(choose(90,10))
?format(choose(90,10))
format(choose(90,10),scientific =F)
?choose()
6^3
90^10
format(90^10,scientific =F)
choose(7000000,14000)
choose(2000000,1000)
choose(1000000,1000)
choose(10000,1000)
choose(10000,100)
x<-round(runif(90,19,25))
x
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
sample(x,10)
set.seed(1600)
sample(x,10)
set.seed(1600)
sample(x,10)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1:10
choose(10,4)
sample(1:10,4)
sample(1:10,4)
8*1*3*7
8*2*6*5
168/3
480/3
sum(c(8,2,6,5)^2)/2
sum(c(8,1,3,7)^2)/2
sum(c(8,1,3,7))*(10/4)
sum(c(8,2,6,5))*(10/4)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
rm(list=ls())
choose(6,3)
Y<-c(2000,3000,3500,0,6000,4500)
combn(Y,3)
s<-combn(Y,3)
s
(2000+3000+3500)/3
(2000+3000+0)/3
(2000+3000+6000)/3
apply(s,2,sum)
apply(s,2,sum)/3
apply(s,2,sum) #Distribución muestral para el estimador de la media
apply(s,2,sum)*(6/3) #Distribución muestral para el estimador de la media
Y
mean(Y)
Y
Y
y<-apply(s,2,sum)/3 #Distribución muestral para el estimador de la media
hist(y)
hist(y)
y
y
abline(h=mean(Y))
abline(v=mean(Y),col="red")
abline(v=mean(Y),col="red",lwd=3)
y
barplot(y)
hist(y)
abline(v=mean(Y),col="red",lwd=3)
sum(Y)
Y
apply(s,2,sum)*(6/3) #Distribución muestral para el estimador del total
ty<-apply(s,2,sum)*(6/3) #Distribución muestral para el estimador del total
hist(ty)
abline(v=sum(Y),col="red",lwd=3)
# calcular la esperanza y la varianza
y
# calcular la esperanza y la varianza
y*(1/20)
# calcular la esperanza y la varianza
sum(y*(1/20))
ty
ty*(1/20)
sum(ty*(1/20))
# calcular la esperanza y la varianza
sum(y*(1/20)) # esperanza del estimador de la media
# calcular la esperanza y la varianza
uy<-sum(y*(1/20)) # esperanza del estimador de la media
y
y-uy
(y-uy)^2
(y-uy)^2*(1/20)
sum((y-uy)^2*(1/20))
sum(ty*(1/20)) # esperanza
pty<-sum(ty*(1/20)) # esperanza
sum((ty-pty)^2*(1/20)) # varianza de la media muestral
s
choose(90,10)
y
ty
s
6^3
Y<-c(23,25,22,35,36,57,34,23,24,32,34,54)
Y
length(Y)
choose(12,4)
choose(12,5)
s<-combn(Y,5)
s
apply(s,2,sum)/5
y<-apply(s,2,sum)/5
y<-apply(s,2,sum)/5
hist(y)
Y<-round(runif(20,20,30))
Y
choose(20,5)
s<-combn(Y,5)
y<-apply(s,2,sum)/5
y
hist(y)
Y<-round(runif(20,20,30))
s<-combn(Y,5)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red")
abline(v=mean(Y),col="red",lwd=T)
abline(v=mean(Y),col="red",lwd=2)
Y<-round(runif(20,20,30))
s<-combn(Y,5)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red",lwd=2)
Y<-round(runif(20,20,30))
s<-combn(Y,10)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red",lwd=2)
abline(v=mean(Y),col="red",lwd=2)
Y<-round(runif(20,20,30))
s<-combn(Y,10)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red",lwd=2)
Y<-round(runif(20,20,30))
s<-combn(Y,10)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red",lwd=2)
mean(Y)
hist(y)
abline(v=mean(Y),col="red",lwd=2)
Y<-round(runif(15,20,30))
s<-combn(Y,10)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red",lwd=2)
Y<-round(runif(25,20,30))
s<-combn(Y,10)
choose(25,10)
y<-apply(s,2,sum)/5
hist(y)
abline(v=mean(Y),col="red",lwd=2)
y<-apply(s,2,sum)/10
hist(y)
abline(v=mean(Y),col="red",lwd=2)
y
Y
Y<-round(rnorm(25,30,5))
Y
s<-combn(Y,10)
y<-apply(s,2,sum)/10
hist(y)
abline(v=mean(Y),col="red",lwd=2)
rm(list=ls())
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
N<-1000000
N<-1000000
x<-round(runif(N,0,10000),0)# ingresos mensuales de una población
x
hist(x)
n<-3
N<-1000000
n<-3
choose(N,n)
#simular 1000 muestras distintas de tamaño n y calcular su media.
xbar<-NULL
sample(x,3)
sample(x,3)
sample(x,3)
for(i in 1:1000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
xbar
choose(N,n)
hist(xbar)
plot(density(xbar))
curve(dnorm(mean(x),sd(x)/sqrt(n)),add = T,col="red")
curve(dnorm(mean(x),sd(x)/sqrt(n)),col="red")
curve(norm(mean(x),sd(x)/sqrt(n)),col="red")
points(density(rnorm(10^6,mean(x),sd(x)/sqrt(n))),type="l",col="red")
plot(density(xbar))
points(density(rnorm(10^6,mean(x),sd(x)/sqrt(n))),type="l",col="red",lwd=2)
plot(density(xbar),col="blue")
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sd(x)/sqrt(n))),type="l",col="red",lwd=2)
n<-15
choose(N,n)
#simular 1000 muestras distintas de tamaño n y calcular su media.
xbar<-NULL
for(i in 1:1000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
hist(xbar)
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sd(x)/sqrt(n))),type="l",col="red",lwd=2)
n<-30
choose(N,n)
#simular 1000 muestras distintas de tamaño n y calcular su media.
xbar<-NULL
for(i in 1:1000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
hist(xbar)
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sd(x)/sqrt(n))),type="l",col="red",lwd=2)
n<-60
choose(N,n)
#simular 1000 muestras distintas de tamaño n y calcular su media.
xbar<-NULL
for(i in 1:1000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
hist(xbar)
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sd(x)/sqrt(n))),type="l",col="red",lwd=2)
points(density(rnorm(10^6,mean(x),sqrt(var(x)*((n-1)/n)/sqrt(n))),type="l",col="red",lwd=2)
points(density(rnorm(10^6,mean(x),sqrt(var(x)*((n-1)/n))/sqrt(n))),type="l",col="red",lwd=2)
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sqrt(var(x)*((n-1)/n))/sqrt(n))),type="l",col="red",lwd=2)
for(i in 1:10000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
hist(xbar)
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sqrt(var(x)*((n-1)/n))/sqrt(n))),type="l",col="red",lwd=2)
n<-6
choose(N,n)
#simular 1000 muestras distintas de tamaño n y calcular su media.
xbar<-NULL
for(i in 1:10000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sqrt(var(x)*((n-1)/n))/sqrt(n))),type="l",col="red",lwd=2)
n<-30
#simular 1000 muestras distintas de tamaño n y calcular su media.
xbar<-NULL
for(i in 1:10000){
s<-sample(x,n)
xbar[i]<-mean(s)
}
plot(density(xbar),col="blue",lwd=2)
points(density(rnorm(10^6,mean(x),sqrt(var(x)*((n-1)/n))/sqrt(n))),type="l",col="red",lwd=2)
x
hist(x)
hist(x)
mean(x)
var(x)
x<-c(10,15,20,20,35)
mean(x)
x
x-mean(x)
(x-mean(x))^2
sum((x-mean(x))^2)
sum((x-mean(x))^2)/5
choose(5,3)
x<-c(10,15,20,20,35)
combn(x,3)
s<-combn(x,3)
s
apply(s, 2, mean)
mean(apply(s, 2, mean))
#distribución muestral de la media
mean(apply(s, 2, mean))
x
s
n<-3
s
var(x)
var(x)*((n-1)/n)
n<-3;N<-5
var(x)*((N-1)/N)
var(x)*((N-1)/N)
s
apply(s,1,var)
apply(s,2,var)
theta2<-apply(s,2,var)
theta1<-apply(s,2,var)*((n-1)/n)
theta1
theta1
theta2
plot(density(theta1))
plot(density(theta1))
points(density(theta2),col="red",type="l")
plot(density(theta1),xlim=c(-50,200))
points(density(theta2),col="red",type="l")
plot(density(theta1),xlim=c(-50,300))
points(density(theta2),col="red",type="l")
hist(theta2)
hist(theta1)
plot(density(theta1),xlim=c(-50,300))
points(density(theta2),col="red",type="l")
theta1
theta2
mean(theta1) #E[]
mean(theta2) #E[]
x<-c(10,15,20,20,35)
n<-3;N<-5
s
var(x)*((N-1)/N)
theta1<-apply(s,2,var)*((n-1)/n)
theta2<-apply(s,2,var)
theta1
theta2
plot(density(theta1),xlim=c(-50,300))
points(density(theta2),col="red",type="l")
mean(theta1) #E[]
mean(theta2) #E[]
mean(theta2) #E[]
var(x)
mean(theta2) #E[]
#distribución muestral de la media
mean(apply(s, 2, mean))
mean(theta1) #E[]
mean(theta2) #E[]
x
x-mean(x)
(x-mean(x))^2
sum((x-mean(x))^2)
sum((x-mean(x))^2)/4
mean(theta2) #E[]
x<-rnorm(1000,20,5)
x
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
x<-rnorm(1000,20,5)
hist(x)
set.seed(999)
x<-rnorm(1000,20,5)
hist(x)
set.seed(999)
x<-rnorm(1000,20,5)
hist(x)
set.seed(999)
x<-rnorm(1000,20,5)
hist(x)
#suponer que se extra una muestra de n=20 de esta población,
choose(1000,20)
x
#suponer que se extra una muestra de n=20 de esta población,
choose(1000,20)
sample(x,20)
sample(x,20)
var(sample(x,20))
n<-20
var(sample(x,20))*(n-1)
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
(var(sample(x,20))*(n-1))/25
#vamos a simular unas 500 muestras posibles sigma=25
x2<-NULL
#vamos a simular unas 500 muestras posibles sigma=25
x2<-NULL
for(i in 1:500){
x2[i]<-(var(sample(x,20))*(n-1))/25
}
x2
plot(density(x2))
plot(density(x2))
points(density(rchisq(1000,19)),col="red",type="l")
plot(density(x2))
points(density(rchisq(10000,19)),col="red",type="l")
#vamos a simular unas 1500 muestras posibles sigma=25
x2<-NULL
for(i in 1:1500){
x2[i]<-(var(sample(x,20))*(n-1))/25
}
x2
plot(density(x2))
points(density(rchisq(10000,19)),col="red",type="l")
#suponer que se extra una muestra de n=20 de esta población,
choose(1000,20)
n<-20
#vamos a simular unas 1500 muestras posibles sigma=25
x2<-NULL
for(i in 1:10000){
x2[i]<-(var(sample(x,20))*(n-1))/25
}
x2
plot(density(x2))
points(density(rchisq(100000,19)),col="red",type="l")
#vamos a simular unas 1500 muestras posibles sigma=25
x2<-NULL
for(i in 1:100000){
x2[i]<-(var(sample(x,20))*(n-1))/25
}
x2
plot(density(x2))
points(density(rchisq(100000,19)),col="red",type="l")
points(density(rchisq(1000000,19)),col="red",type="l")
plot(density(x2))
points(density(rchisq(1000000,19)),col="red",type="l")
plot(density(x2))
points(density(rchisq(1000000,19)),col="red",type="l")
curve(dchisq(x,2))
curve(dchisq(x,2),xlim=c(0,8))
curve(dchisq(x,2),xlim=c(0,15))
curve(dchisq(x,3),xlim=c(0,15))
curve(dchisq(x,4),xlim=c(0,15))
for(v in 1:100){
curve(dchisq(x,v),xlim=c(0,15))
}
curve(dchisq(x,v),xlim=c(0,15))
curve(dchisq(x,v),xlim=c(0,15),add=T)
curve(dchisq(x,1),xlim=c(0,15),add=T)
curve(dchisq(x,1),xlim=c(0,15))
for(v in 1:30){
curve(dchisq(x,v),xlim=c(0,15),add=T,col=v)
}
curve(dchisq(x,1),xlim=c(0,15),ylim=c(0,0.4))
for(v in 1:30){
curve(dchisq(x,v),xlim=c(0,15),add=T,col=v)
}
curve(dchisq(x,1),xlim=c(0,40),ylim=c(0,0.4))
for(v in 1:30){
curve(dchisq(x,v),xlim=c(0,15),add=T,col=v)
}
curve(dchisq(x,1),xlim=c(0,40),ylim=c(0,0.4))
for(v in 1:30){
curve(dchisq(x,v),add=T,col=v)
}
pchisq(4,10)
pchisq(10,10) # F(4)
pchisq(100,10) # F(4)
pchisq(4,10) # F(t)=P(X<t)
pchisq(15,10) # F(t)=P(X<t)
pchisq(4,10) # F(t)=P(X<t)
#ejemplo para usar R para calcular probabilidades de la Chi2
pchisq(4,10) # F(t)=P(X<t): F(4)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
