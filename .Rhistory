mean(x)
sqrt(5)
((1.64*2)^2)/5
(((1.64*2)^2)*5)/(5^2)
(((1.64*2)^2)*5)/(1^2)
(((1.64*2)^2)*5)/(0.1^2)
(((1.64*2)^2)*5)/(5^2)
(((1.64*2)^2)*5)/(10^2)
(((1.64*2)^2)*5)/(2^2)
((1.64+1.64)/0.15)^2
sqrt(5)
sqrt(5)*0.15
(((1.64*2)^2)*5)/(0.33^2)
((1.64+1.64)/0.25)^2
((1.64+1.64)/0.4)^2
za2<-qnorm(0.05/2,lower.tail = F)
za2
zb<-qnorm(0.2,lower.tail = F)
zb
n<-((za2*0.5+zb*0.5)/0.09)^2
n
((za2*0.5+zb*0.5)/0.01)^2
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
exp(-1)
exp(-10)
exp(-100)
exp(-1000)
exp(0)
plot(function(x){exp{x}})
plot(function(x){exp(x)})
plot(function(x){exp(x)},c(-100,100))
plot(function(x){exp(x)},c(-10,100))
plot(function(x){exp(x)},xlim=c(-10,100))
plot(function(x){exp(x)},xlim=c(-10,10))
Fxy<-function(x,y){
pp<-(1-exp(-x))*(1-exp(-y))
return(pp)
}
Fxy<-function(x,y){
pp<-(1-exp(-x))*(1-exp(-y))
return(pp)
}
Fxy(5,10)
Fxy(500,100)
Fxy(10000,50)
Fxy(1000,50)
Fxy(100000,50)
Fxy(100,50)
Fxy(100,0)
exp(-9999999)
exp(0)
13/3
13/18
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
144/3
1/11
x<-1:1000
x
y
x
sum(x)
x
sum(x)
s1<-sample(x,10)
s2<-sample(x,30)
s1
s2
x<-1:10
x
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
sample(x,3)
u<-1:56
u
n=10
n
sample(u,10)
aleatorio<-runif(56,0,1)
aleatorio
order(aleatorio)
u[order(aleatorio)[1:10]]
u[order(aleatorio)[44:53]]
U<-letters[1:10]
U
sample(U,3)
sample(U,3)
sample(U,3)
sample(U,3)
U
U
choose(10,3)
choose(10,4)
choose(10,7)
10*10*10
10^4
10^7
choose(5,3)
combn(u,3)
combn(U,3)
combn(U,7)
U
combn(U,4)
choose(120,5)
choose(120,6)
choose(120,10)
choose(4000,500)
choose(3000,500)
choose(2500,500)
choose(2500,200)
format(choose(2500,200),scientific = F)
choose(80000,2)
choose(80000,3)
format(choose(80000,3),scientific = F)
format(choose(80000,4),scientific = F)
format(choose(80000,5),scientific = F)
format(choose(80000,6:8),scientific = F)
format(choose(80000,10:15),scientific = F)
U
edad<-scan()
edad
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
sample(edad,5)
edad
sample(edad,5)
sample(edad,5)
choose(44,5)
choose(44,3)
44
edad
n=3
ss<-combn(edad,3)
ss
head(ss)
View(ss)
edad
ss[1,]
unique(ss[1,])
unique(ss[2,])
unique(ss[3,])
1:10
sum(1:10)
1:10
5/10
1:19
1:10
1:10
s<-sample(1:10,3)
s
sum(s)
prop(s)
2*9*7
1:10
sum(1:10)
sum(8, 9, 6, 8, 8, 7, 6, 2, 7, 7, 7, 6, 7, 8, 8, 5, 7, 7, 5, 8, 4, 6, 8, 8, 8, 7, 7, 6, 4, 8, 8, 6, 8, 4, 10, 7, 6, 7, 6, 8, 5, 6, 8, 6)
x<-c(8, 9, 6, 8, 8, 7, 6, 2, 7, 7, 7, 6, 7, 8, 8, 5, 7, 7, 5, 8, 4, 6, 8, 8, 8, 7, 7, 6, 4, 8, 8, 6, 8, 4, 10, 7, 6, 7, 6, 8, 5, 6, 8, 6)
set.seed(999)
sample(x,8)
set.seed(999)
sample(x,8)
set.seed(999)
s<-sample(x,8)
max(ss)
max(s)
max(s)*min(s)
max(s)*min(s)*4
max(s)*min(s)*8
max(s)*min(s)*7
s
8*median(x)*5
8*median(s)*5
x
s
s
8*median(s)*5
5*sum(s)+(8*5/2)
8*5^2+97
5*sum(s)+(sum(s)/(8-5))
mean(s)
mean(s)*44
s
choose(44,8)
set.seed(998)
set.seed(9999)
s2<-sample(x,8)
s2
s2
sort(s2)
6*6*2
sum(s2)
2*48+18/2
9*2^2+97
2*48+48/7
mean(s2)*44
sample(x,8)
sample(x,8)
tt4<-function(y){
min(y)*sum(y)+(sum(y)/(max(y)-min(y)))
}
ss<-sample(x,8)
ss
tt4(ss)
ss<-sample(x,8)
ss
tt4(ss)
tt5<-function(y){
yy<-mean(y)*44
return(yy)
}
ss<-sample(x,8)
ss
tt4(ss)
tt5(ss)
ss<-sample(x,8)
ss
tt4(ss)
tt5(ss)
ss<-sample(x,8)
ss
tt4(ss)
tt5(ss)
theta5<-NULL
k<-1000
theta4<-NULL
theta5<-NULL
for(i in 1:k){
ss<-sample(x,8)
print(ss)
theta4[i]<-tt4(ss)
theta5[i]<-tt5(ss)
}
theta4
theta5
1000/177000000
plot(density(theta4))
hist(theta4)
hist(theta5)
plot(density(theta4))
plot(density(theta5))
plot(density(theta4))
plot(density(theta5))
par(mfrow=c(1,2))
plot(density(theta4))
plot(density(theta5))
par(mfrow=c(1,2))
plot(density(theta4))
abline(v=297,col="red")
plot(density(theta5))
abline(v=297,col="red")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
y<-c(2000,3000,3500,0,6000,4500)
y
sample(y,3)
sample(y,3)
choose(6,3)
combn(y,3)
apply(combn(y,3),2,mean)
apply(combn(y,3),2,mean)
x<-apply(combn(y,3),2,mean)
x
x*(1/20)
sum(x*(1/20))
y
mean(y)
apply(combn(y,3),2,mean)
combn(y,3)
apply(combn(y,3),2,mean)*6
y
sum(y)
tt<-apply(combn(y,3),2,mean)*6
tt
sum(tt*(1/20))#esperanza
hist(tt)
hist(tt)
abline(v=19000,col="red")
tt
N<-2000
edad<-round(runif(N,15,55),0)
edad
N<-2000
set.seed(1234)
edad<-round(runif(N,15,55),0)
edad
set.seed(1234)
edad<-round(runif(N,15,55),0)
set.seed(1234)
edad<-round(runif(N,15,55),0)
edad
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
edad<-round(runif(N,15,55),0)
head(edad)
edad<-round(runif(N,15,55),0)
head(edad)
edad<-round(runif(N,15,55),0)
head(edad)
edad<-round(runif(N,15,55),0)
head(edad)
edad<-round(runif(N,15,55),0)
head(edad)
edad<-round(runif(N,15,55),0)
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
N<-10000
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
N<-10000
set.seed(1234)
edad<-round(runif(N,15,55),0)
head(edad)
edad
n<-100
100/10000
choose(N,n)
format(choose(N,n),scientific = F)
tt
#parámetros
ux<-mean(edad)
ux
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
sample(edad,n)
mean(sample(edad,n))
mean(sample(edad,n))
mean(sample(edad,n))
mean(sample(edad,n))
mean(sample(edad,n))
mean(sample(edad,n))
#Vamos a simular algunas de las muestras posibles
k<-1000
xbar<-NULL
for(i in 1:k){
xbar[i]<-mean(sample(edad,n))
}
xbar
tt
xbar
mean(xbar)
ux
#Vamos a simular algunas de las muestras posibles
k<-10000
xbar<-NULL
for(i in 1:k){
xbar[i]<-mean(sample(edad,n))
}
mean(xbar)
ux
#Vamos a simular algunas de las muestras posibles
k<-100000
xbar<-NULL
for(i in 1:k){
xbar[i]<-mean(sample(edad,n))
}
mean(xbar)
format(choose(N,n),scientific = F)
mean(xbar)
ux
mean(xbar)#E[xbar]=ux
#varianza teórica
sigma2x<-sum((edad-mean(edad))^2)/N
sigma2x
var_xbar<-sigma2x/n
var_xbar
#con la simulación
```
#con la simulación
xbar
#con la simulación E[X^2]-E[X]^2
mean(xbar^2)-mean(xbar)^2
#con la simulación E[X^2]-E[X]^2
mean(xbar^2)-mean(xbar)^2
var_xbar
format(choose(N,n),scientific = F)
100000/choose(N,n)
bookdown::clean_book(T)
bookdown::render_book("index.rmd","bookdown::gitbook")
bookdown::clean_book(T)
bookdown::render_book("index.rmd","bookdown::gitbook")
knitr::knit_exit()
dev.off()
dev.off()
dev.off()
bookdown::clean_book(T)
bookdown::render_book("index.rmd","bookdown::gitbook")
bookdown::render_book("index.rmd","bookdown::gitbook")
21.5-20.9
(1.9/35)+(1.9/35)
21.5-20.7
(1-0.8)/sqrt(0.1086)
1-0.7291
1-pnorm((1-0.8)/sqrt(2*1.9/35))
42/50
(0.84*(1-0.84))/50
(0.95-0.84)/sqrt(0.002688)
1-0.9830
c(10,15,20,20,35)
mean(c(10,15,20,20,35))
x<-c(10,15,20,20,35)
x
sum((x-mean(x))^2)/5
#Supongamos que tenemos una población de 10000 personas y se sacan muestras de tamaño 20. Simular el comportamiento de la distribución muestral de la varianza.
x<-runif(10000,10,70)
#Supongamos que tenemos una población de 10000 personas y se sacan muestras de tamaño 20. Simular el comportamiento de la distribución muestral de la varianza.
x<-round(runif(10000,10,70))
x
sample(x,20)
sample(x,20)
sample(x,20)
sample(x,20)
aux<-sample(x,20)
aux
var(aux)
#Supongamos que tenemos una población de 10000 personas y se sacan muestras de tamaño 20. Simular el comportamiento de la distribución muestral de la varianza.
x<-round(runif(10000,10,70))
svar<-NULL
k<-1000
for(i in 1:k){
aux<-sample(x,20)
svar[i]<-var(aux)
}
svar
plot(density(svar))
abline(v=mean(x),col="red")
plot(density(svar))
abline(v=var(x),col="red")
plot(density(svar))
abline(v=var(x)*(9999/10000),col="red")
abline(v=var(x)*(9999/10000)+c(-1,1)*sd(svar),col="red",lty=1)
plot(density(svar))
abline(v=var(x)*(9999/10000),col="red")
abline(v=var(x)*(9999/10000)+c(-1,1)*sd(svar),col="red",lty=2)
abline(v=var(x)*(9999/10000)+c(-1,1)*2*sd(svar),col="red",lty=3)
svar<-NULL
k<-10000
for(i in 1:k){
aux<-sample(x,20)
svar[i]<-var(aux)
}
plot(density(svar))
abline(v=var(x)*(9999/10000),col="red")
abline(v=var(x)*(9999/10000)+c(-1,1)*sd(svar),col="red",lty=2)
abline(v=var(x)*(9999/10000)+c(-1,1)*2*sd(svar),col="red",lty=3)
curve(dchisq(x,300),xlim=c(100,500))
curve(dchisq(x,300),xlim=c(200,400))
curve(dchisq(x,1),xlim=c(200,400))
curve(dchisq(x,1),xlim=c(0,20))
curve(dchisq(x,2),xlim=c(0,20))
curve(dchisq(x,3),xlim=c(0,20))
curve(dchisq(x,4),xlim=c(0,20))
curve(dchisq(x,10),xlim=c(0,20))
curve(dchisq(x,10),xlim=c(0,30))
curve(dchisq(x,30),xlim=c(0,30))
curve(dchisq(x,30),xlim=c(0,60))
curve(dchisq(x,700),xlim=c(500,600))
curve(dchisq(x,700),xlim=c(500,900))
curve(dchisq(x,100),xlim=c(500,900))
curve(dchisq(x,100),xlim=c(50,200))
curve(dchisq(x,100),xlim=c(100,200))
curve(dchisq(x,100),xlim=c(0,200))
